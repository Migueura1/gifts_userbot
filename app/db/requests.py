import json
from pathlib import Path
from config import default_json_path, NOT_SET
from loguru import logger

CONFIG_PATH = Path(default_json_path)


# —á—Ç–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥–∞
def load_config() -> dict:
    with open(CONFIG_PATH, "r", encoding="utf-8") as f:
        return json.load(f)


# –∑–∞–ø–∏—Å—å –∫–æ–Ω—Ñ–∏–≥–∞
def save_config(data: dict):
    with open(CONFIG_PATH, "w", encoding="utf-8") as f:
        json.dump(data, f, indent=4)


# üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ supply_limit
def update_supply_limit(new_limit: int):
    config = load_config()
    config["supply_limit"] = new_limit
    save_config(config)

    logger.info(f"supply_limit –æ–±–Ω–æ–≤–ª–µ–Ω: {new_limit if new_limit != NOT_SET else '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ'}")


# üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ price_from
def update_price_from(price: float):
    config = load_config()
    config["price_from"] = price
    save_config(config)

    logger.info(f"price_from –æ–±–Ω–æ–≤–ª–µ–Ω: {price if price != NOT_SET else '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ'}")


# üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ price_to
def update_price_to(price: float):
    config = load_config()
    config["price_to"] = price
    save_config(config)

    logger.info(f"price_to –æ–±–Ω–æ–≤–ª–µ–Ω: {price if price != NOT_SET else '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ'}")


# ‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª
def add_channel(channel_id: int, channel_name: str):
    config = load_config()
    str_id = str(channel_id)
    if str_id not in config["linked_channels"]:
        config["linked_channels"][str_id] = channel_name
        save_config(config)

        logger.info(f"–ö–∞–Ω–∞–ª –ø—Ä–∏–≤—è–∑–∞–Ω: {channel_name}[<code>{channel_id}</code>]")
        
    logger.info(f"–ö–∞–Ω–∞–ª —É–∂–µ –ø—Ä–∏–≤—è–∑–∞–Ω: {channel_name}[<code>{channel_id}</code>]")



# ‚ûñ –£–¥–∞–ª–∏—Ç—å –∫–∞–Ω–∞–ª
def remove_channel(channel_id: str):
    config = load_config()
    
    del config['linked_channels'][channel_id]

    save_config(config)

    logger.info(f"–ö–∞–Ω–∞–ª –æ—Ç–≤—è–∑–∞–Ω: {channel_id}")