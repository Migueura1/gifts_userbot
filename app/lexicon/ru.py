import db.requests as req
from config import NOT_SET


BUTTONS = {
    'supply': "Supply",
    'price_from': "–¶–µ–Ω–∞ –û–¢",
    'price_to': "–¶–µ–Ω–∞ –î–û",
    'link_channels': "üîó –ü—Ä–∏–≤—è–∑–∫–∞ –∫–∞–Ω–∞–ª–æ–≤",
    'test_autobuy': "üéÅ –¢–µ—Å—Ç —Å–Ω–∞–π–ø–µ—Ä–∞",
    'cancel': '‚ùå –û—Ç–º–µ–Ω–∞',
    'ok': '–û–∫–µ–π',
    'clear_supply': "–°–±—Ä–æ—Å–∏—Ç—å",
    'clear_price_from': "–°–±—Ä–æ—Å–∏—Ç—å",
    'clear_price_to': "–°–±—Ä–æ—Å–∏—Ç—å",
    'unlink': "–û—Ç–≤—è–∑–∞—Ç—å",
    'enter_stars': "‚≠êÔ∏è –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å",
    'start_test': 'üéÅ –ù–∞—á–∞—Ç—å',
}

LEXICON_COMMANDS_RU = {
    'start': '–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞'
}


async def start_page() -> str:
    config = req.load_config()
    text = f"<b>‚öôÔ∏è –í–∞—à–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:</b>\n\n"
    text += f"Supply: <code>–¥–æ {str(config['supply_limit']) + ' —à—Ç.' if config['supply_limit'] != NOT_SET else '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ'}</code>\n"
    text += f"–¶–µ–Ω–∞ –æ—Ç: <code>{str(config['price_from']) + ' ‚≠êÔ∏è' if config['price_from'] != NOT_SET else '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ'}</code>\n"
    text += f"–¶–µ–Ω–∞ –¥–æ: <code>{str(config['price_to']) + ' ‚≠êÔ∏è' if config['price_to'] != NOT_SET else '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ'}</code>\n\n"

    if config['linked_channels']:
        linked_channels = config['linked_channels']
        text += '<b>üîó –ü—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–µ –∫–∞–Ω–∞–ª—ã:</b>\n'

        text += '<blockquote>'
        for id, name in linked_channels.items():
            text += f'‚Ä¢ {name}[<code>{id}</code>]\n'
        text += '</blockquote>'
    else:
        text += '<blockquote>‚ö†Ô∏è –ü—Ä–∏–≤—è–∑–∞–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ –Ω–µ—Ç, –ø–æ–¥–∞—Ä–∫–∏ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å.</blockquote>'

    text += '\n\n<b>–ü–æ–¥—Å–∫–∞–∑–∫–∞:</b> –ß—Ç–æ–±—ã –ª–æ–≤–∏—Ç—å —Å–∞–º—ã–µ —Ä–µ–¥–∫–∏–µ –ø–æ–¥–∞—Ä–∫–∏ - –Ω–µ —Ç—Ä–æ–≥–∞–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã <code>–¶–µ–Ω–∞ –û–¢</code> –∏ <code>–¶–µ–Ω–∞ –î–û</code>, –ø—Ä–æ—Å—Ç–æ –≤—ã—Å—Ç–∞–≤–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π supply; –µ—Å–ª–∏ –Ω–µ –≤—ã—Å—Ç–∞–≤–ª—è—Ç—å –Ω–∏–∫–∞–∫–∏–µ –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ - –±–æ—Ç –≤–æ–∑—å–º–µ—Ç —Å–∞–º—ã–π —Ä–µ–¥–∫–∏–π –≤—ã—à–µ–¥—à–∏–π –ø–æ–¥–∞—Ä–æ–∫. '

    text += '\n\n<b>–ü–æ–¥—Å–∫–∞–∑–∫–∞ 2:</b> –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –±–æ—Ç–∞, –ø–µ—Ä–µ–π–¥—è –≤ —Ä–∞–∑–¥–µ–ª üéÅ<code>–¢–µ—Å—Ç –°–Ω–∞–π–ø–µ—Ä–∞</code>'

    text += '\n\n <b>–ü–æ–¥—Å–∫–∞–∑–∫–∞ 3: </b>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /logs –¥–ª—è –≤—ã–≥—Ä—É–∑–∫–∏ –ª–æ–≥–æ–≤ —Å –±–æ—Ç–∞ –∏ /refund [id —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏] –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∑–≤–µ–∑–¥.'

    return text


async def supply_page() -> str:
    config = req.load_config()

    text = "<b>‚öôÔ∏è –ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∞–ø–ø–ª–∞—è:</b>\n\n"
    text += f"–°–∞–ø–ø–ª–∞–π –¥–æ: <code>{str(config['supply_limit']) + ' —à—Ç.' if config['supply_limit'] != NOT_SET else '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ'}</code>\n\n"
    text += f'<blockquote>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:</blockquote>'

    return text


async def price_from_page() -> str:
    config = req.load_config()

    text = "<b>‚öôÔ∏è –ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¶–µ–Ω—ã –û–¢:</b>\n\n"
    text += f"–¶–µ–Ω–∞ –û–¢: <code>{str(config['price_from']) + ' ‚≠êÔ∏è' if config['price_from'] != NOT_SET else '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ'}</code>\n\n"
    text += f'<blockquote>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:</blockquote>'

    return text


async def price_to_page() -> str:
    config = req.load_config()

    text = "<b>‚öôÔ∏è –ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¶–µ–Ω—ã –î–û:</b>\n\n"
    text += f"–¶–µ–Ω–∞ –î–û: <code>{str(config['price_to']) + ' ‚≠êÔ∏è' if config['price_to'] != NOT_SET else '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ'}</code>\n\n"
    text += f'<blockquote>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:</blockquote>'

    return text


async def channels(channels: dict) -> str:
    text = '<b>üîó –ú–µ–Ω—é –ø—Ä–∏–≤—è–∑–∫–∏ –∫–∞–Ω–∞–ª–æ–≤:</b>\n\n'

    if not channels:
        text += '<blockquote>‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞, –ø–æ–¥–∞—Ä–∫–∏ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å.</blockquote>'
    
    return text
    

async def channel_(id: str) -> str:
    config = req.load_config()
    channel_name = config['linked_channels'][id]
    channel_id = id

    text = '<b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–º:</b>\n\n'

    text += '<blockquote>'
    text += f'<b>ID:</b> <code>{channel_id}</code>\n'
    text += f'<b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> <code>{channel_name}</code>\n'
    text += '</blockquote>'

    return text


async def add_channel() -> str:
    text = (
        '<b>üîó –ü—Ä–∏–≤—è–∑–∫–∞ –Ω–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞</b>\n\n'
        '<blockquote>1) –°–æ–∑–¥–∞–π—Ç–µ –∫–∞–Ω–∞–ª(–Ω–µ –≥—Ä—É–ø–ø—É), –ª—É—á—à–µ —á–∞—Å—Ç–Ω—ã–π\n'
        '2) –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª\n'
        '3) –ü—Ä–∏—à–ª–∏—Ç–µ —Å—é–¥–∞ ID –∫–∞–Ω–∞–ª–∞(–º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å, –ø–µ—Ä–µ—Å–ª–∞–≤ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ @getmyid_bot)\n\n'
        '<b>–ë–æ—Ç —Å–∞–º –ø—Ä–æ–≤–µ—Ä–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –∏ –ø–æ–¥–≤—è–∂–µ—Ç –∫–∞–Ω–∞–ª.</b></blockquote>'
    )

    return text

async def other_start() -> str:
    text = (
        "<b>–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞!</b>\n\n"
        "–í–æ–∑–º–æ–∂–Ω–æ –≤—ã –Ω–µ –æ–ø–ª–∞—Ç–∏–ª–∏ –ª–∏—Ü–µ–Ω–∑–∏—é –±–æ—Ç–∞, –∑–∞ –ø–æ–∫—É–ø–∫–æ–π –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ <b>@white_fIow.</b>"
    )

    return text